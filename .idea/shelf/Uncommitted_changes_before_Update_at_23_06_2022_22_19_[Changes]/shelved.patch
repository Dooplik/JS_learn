Index: index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!doctype html>\r\n<html lang=\"ru\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>РРРРРРЬЯ</title>\r\n</head>\r\n<body>\r\n    <h1>Hello world</h1>\r\n\r\n<script src='Arrays.js'></script>\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/index.html b/index.html
--- a/index.html	(revision b1f45cbe48f218de5397622b704dffbd86b6ab02)
+++ b/index.html	(date 1656003447738)
@@ -7,6 +7,6 @@
 <body>
     <h1>Hello world</h1>
 
-<script src='Arrays.js'></script>
+<script src='Asynchrony.js'></script>
 </body>
-</html>
\ No newline at end of file
+</html>
Index: text.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>==================================Термины==================================\r\n1. Мутация\r\n    Что-то вроде автоматического приведения к одному типу двух объектов\r\n    разного типа\r\n        Судя из контекста видеоурока мутирование это просто изменение\r\n        типа или данных объекта\r\n2. Группировка\r\n3. Function Declaration\r\n4. Function Expression\r\n    Функция всегда должна быть написано до её вызова в коде\r\n5. Анонимные функции\r\n6. Замыкание\r\n7. CallBack функция
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/text.txt b/text.txt
--- a/text.txt	(revision b1f45cbe48f218de5397622b704dffbd86b6ab02)
+++ b/text.txt	(date 1656004779324)
@@ -10,4 +10,10 @@
     Функция всегда должна быть написано до её вызова в коде
 5. Анонимные функции
 6. Замыкание
-7. CallBack функция
\ No newline at end of file
+7. CallBack функция
+8. Деструктуризация
+9. Event Loop
+10. Асинхронность
+11. Способ работы с асинхронным кодом - промисы
+12. CallBack Hell типо куча вложенных callBack функций(погугли потом по фану)
+13. AJAX запросы(в целом для того, чтобы без перезагрузки страницы обновлять данные)
\ No newline at end of file
Index: Objects.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Objects.js b/Objects.js
new file mode 100644
--- /dev/null	(date 1656003251989)
+++ b/Objects.js	(date 1656003251989)
@@ -0,0 +1,95 @@
+const person = {
+    name: "Dooplik",
+    age: 20,
+    isStudent: true,
+    //'complex key': 'complex value',
+    //[1 + 3]: "1 + 3",
+    greet() {
+        console.log("Its greet")
+    },
+    // this в данном контексте это объект person
+    info() {
+        console.info('Информация про человека по имени:', this.name)
+    }
+}
+console.log(person.name)
+console.log(person['age'])
+console.log(person['complex key'])
+console.log(person[4])
+person.greet()
+
+person['complex key'] = 'new complex key'
+console.log(person['complex key'])
+
+delete person.age
+console.log(person.age);
+
+// Деструктуризация
+//const name = person.name
+//const isStudent = person.isStudent
+
+const {name: name, isStudent: isStudent = false} = person
+console.log(name, isStudent)
+
+// Итерация по объекту
+// Цикл forin опасен, так как может проходить не только п колючам данного объекта,
+// но и в прототип Object
+for(let key in person) {
+    if (person.hasOwnProperty(key)) {
+        console.log('key:', key)
+        console.log('value:', person[key])
+    }
+}
+
+// данная конструкция позволяет избежать проблемы описанной выше
+const keys = Object.keys(person)
+console.log(keys)
+keys.forEach((key) => {
+    console.log('key:', key)
+    console.log('value:', person[key])
+})
+
+// Context
+person.info()
+
+// слабо понял чё сделал в методе keysAndValue, но работает
+const logger = {
+    keys() {
+        console.log('Object keys:', Object.keys(this))
+    },
+    keysAndValues() {
+        Object.keys(this).forEach((key) => {
+            console.log(`${key}: ${this[key]}`)
+        })
+    },
+    withParams(top=false, between = false, bottom = false) {
+        if (top) {
+            console.log('------Start------')
+        }
+        Object.keys(this).forEach((key, index, array) => {
+            console.log(`${key}: ${this[key]}`)
+            if (between && index !== array.length - 1) {
+                console.log('--------------')
+            }
+        })
+        if (bottom) {
+            console.log('------End------')
+        }
+    }
+}
+
+// метод bind привязывает контекст ....... ЧТО?
+// bind возвращает новую функцию
+// в целом крутая штука разберись потом поподробней
+const bound = logger.keys.bind(person)
+bound()
+
+// как bind, только он сразк вызывает функцию
+logger.keysAndValues.call(person)
+logger.withParams.call(person, true, false, true)
+// apply то же что и call, только остальные параметры оборачиваются в массив
+logger.withParams.apply(person, [true, false, true])
+
+
+
+
Index: Asynchrony.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Asynchrony.js b/Asynchrony.js
new file mode 100644
--- /dev/null	(date 1656004779329)
+++ b/Asynchrony.js	(date 1656004779329)
@@ -0,0 +1,40 @@
+// Event Loop
+
+const timeout = setTimeout(() => {
+    clearTimeout(timeout)
+    console.log('After timeout')
+}, 2500)
+
+const interval = setInterval(() => {
+    clearInterval(interval)
+    console.log('After interval')
+}, 1000)
+
+const delay = (callback, milis=1000) => {
+    setTimeout(callback, milis)
+}
+
+delay(() => {
+    console.log("After two seconds")
+}, 2000)
+
+const delay1 = (wait = 1000) => {
+    const promise = new Promise((resolve, reject) => {
+        setTimeout(() => {
+            resolve()
+            // reject("Что-то пошло не так") // для ошибочек в консоли
+        }, wait)
+    })
+    return promise
+}
+delay1(2500)
+    .then(() => {
+        console.log("After 2.5 seconds")
+    })
+    .catch((err) => {
+        console.log("ERROR", err)
+    }) // сюда заходит если видит ошибку
+    .finally(() => {
+        console.log("Finally")
+    })
+// тема какая-то непонятная так что надо разбираться глубже
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"87dea2a1-b491-4264-aa26-20d16fedd7b6\" name=\"Changes\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"JavaScript File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2AsXr251MbZfKqFvFPEqLA2aUMQ\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"last_opened_file_path\": \"E:/development/Education/Education\",\r\n    \"settings.editor.selected.configurable\": \"org.jetbrains.plugins.github.ui.GithubSettingsConfigurable\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"baseComponents.js\" type=\"NodeJSConfigurationType\" temporary=\"true\" nameIsGenerated=\"true\" path-to-js-file=\"$PROJECT_DIR$/baseComponents.js\" working-dir=\"$PROJECT_DIR$\">\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Node.js.baseComponents.js\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"87dea2a1-b491-4264-aa26-20d16fedd7b6\" name=\"Changes\" comment=\"\" />\r\n      <created>1655799466414</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1655799466414</updated>\r\n      <workItem from=\"1655799471264\" duration=\"16613000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision b1f45cbe48f218de5397622b704dffbd86b6ab02)
+++ b/.idea/workspace.xml	(date 1656004011107)
@@ -1,7 +1,13 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ChangeListManager">
-    <list default="true" id="87dea2a1-b491-4264-aa26-20d16fedd7b6" name="Changes" comment="" />
+    <list default="true" id="87dea2a1-b491-4264-aa26-20d16fedd7b6" name="Changes" comment="">
+      <change afterPath="$PROJECT_DIR$/Asynchrony.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Objects.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/index.html" beforeDir="false" afterPath="$PROJECT_DIR$/index.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/text.txt" beforeDir="false" afterPath="$PROJECT_DIR$/text.txt" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -26,16 +32,16 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "last_opened_file_path": "E:/development/Education/Education",
-    "settings.editor.selected.configurable": "org.jetbrains.plugins.github.ui.GithubSettingsConfigurable",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;last_opened_file_path&quot;: &quot;E:/development/Education/Education&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;org.jetbrains.plugins.github.ui.GithubSettingsConfigurable&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="RunManager">
     <configuration name="baseComponents.js" type="NodeJSConfigurationType" temporary="true" nameIsGenerated="true" path-to-js-file="$PROJECT_DIR$/baseComponents.js" working-dir="$PROJECT_DIR$">
       <method v="2" />
@@ -54,11 +60,23 @@
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
       <updated>1655799466414</updated>
-      <workItem from="1655799471264" duration="16613000" />
+      <workItem from="1655799471264" duration="17488000" />
+      <workItem from="1655998267293" duration="5375000" />
     </task>
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
     <option name="version" value="3" />
   </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
 </project>
\ No newline at end of file
